# docker-compose.example.yml
# TEMPLATE PUBLIC - Copier vers docker-compose.yml et adapter

networks:
  nodered_borgmatic_nextcloud:
    external: true

services:
  borgmatic-api:
    image: ghcr.io/quentinreytinas/borgmatic-api-nextcloud-aio:latest
    container_name: borgmatic-api
    hostname: borgmatic-api
    restart: unless-stopped
    
    networks:
      - nodered_borgmatic_nextcloud
    
    environment:
      # === SÉCURITÉ: Générer avec: openssl rand -hex 32 ===
      API_TOKEN: "CHANGEME_GENERATE_STRONG_TOKEN"
      API_READ_TOKEN: "CHANGEME_GENERATE_STRONG_TOKEN"
      APP_FROM_HEADER: "NodeRED-Internal"
      DOCKER_HOST: "tcp://docker-socket-proxy:2375"
      
      # === Flask/Gunicorn ===
      API_BIND: "0.0.0.0"
      API_PORT: "5000"
      API_WORKERS: "2"
      API_THREADS: "4"
      API_TIMEOUT: "300"
      API_KEEPALIVE: "75"
      API_LOGLEVEL: "info"
      
      # === Borg/Borgmatic ===
      BORGMATIC_CONFIG_DIR: "/etc/borgmatic.d"
      BORG_BASE_DIR: "/var/lib/borg"
      BORG_SSH_DIR: "/root/.ssh"
      
      # === Nextcloud AIO ===
      AIO_MASTER: "nextcloud-aio-mastercontainer"
      AIO_DAILY: "/daily-backup.sh"
      AIO_HEALTH: "/healthcheck.sh"
      
      # === SSE ===
      APP_SSE_HEARTBEAT_SEC: "15"
      APP_SSE_BASE_URL: "http://borgmatic-api:5000"
      
      # === Timezone ===
      TZ: "Europe/Paris"
    
    devices:
      - "/dev/fuse:/dev/fuse"
    
    cap_add:
      - SYS_ADMIN
    
    security_opt:
      - no-new-privileges:true
    
    volumes:
      # Configs borgmatic (ADAPTER le chemin)
      - ./configs:/etc/borgmatic.d:ro
      
      # Volumes Nextcloud AIO (lecture seule)
      - nextcloud_aio_mastercontainer:/nextcloud_aio_volumes/nextcloud_aio_mastercontainer:ro
      - nextcloud_aio_nextcloud:/nextcloud_aio_volumes/nextcloud_aio_nextcloud:ro
      - nextcloud_aio_nextcloud_data:/nextcloud_aio_volumes/nextcloud_aio_nextcloud_data:ro
      - nextcloud_aio_database:/nextcloud_aio_volumes/nextcloud_aio_database:ro
      - nextcloud_aio_database_dump:/nextcloud_aio_volumes/nextcloud_aio_database_dump:ro
      - nextcloud_aio_redis:/nextcloud_aio_volumes/nextcloud_aio_redis:ro
      - nextcloud_aio_apache:/nextcloud_aio_volumes/nextcloud_aio_apache:ro
      
      # Cache & SSH (persistants)
      - cache:/root/.cache/borg
      - ssh:/root/.ssh
      
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "com.centurylinklabs.watchtower.stop-signal=SIGTERM"
      - "com.centurylinklabs.watchtower.stop-timeout=300s"

    healthcheck:
      test: ["CMD", "python3", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:5000/health', timeout=3)"]
      interval: 30s
      timeout: 5s
      retries: 3

  docker-socket-proxy:
    image: tecnativa/docker-socket-proxy:latest
    container_name: docker-socket-proxy
    restart: unless-stopped
    networks:
      - nodered_borgmatic_nextcloud
    environment:
      CONTAINERS: 1
      INFO: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

volumes:
  nextcloud_aio_mastercontainer:
    external: true
  nextcloud_aio_nextcloud:
    external: true
  nextcloud_aio_nextcloud_data:
    external: true
  nextcloud_aio_database:
    external: true
  nextcloud_aio_database_dump:
    external: true
  nextcloud_aio_redis:
    external: true
  nextcloud_aio_apache:
    external: true
  cache:
  ssh: